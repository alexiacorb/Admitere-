Edit, ia a IV-a (2018)
1. a)
i)#include <iostream>

using namespace std;
int f(unsigned int m,unsigned int n){
    if(m<n){
        return m;
    }
    return f(m-n,n);
}
int main()
{
    int m,n;
    cin>>m>>n;
    cout<<f(m,n);
    return 0;
}

ii) suprogramul calculeaza m%n;
b) ///nr de termeni puteri a lui doi care prin adunare compun nr = cu nr de biti 1 din scrierea nr in baza 2
   #include <iostream>

using namespace std;
int termeni(int n){
    int k=0;
    while(n!=0){
        if(n%2==1){
            k++;
        }
        n=n/2;
    }
    return k;
}
int main()
{
    int n;
    cin>>n;
    cout<<termeni(n);
    return 0;
}
c) #include <iostream>

using namespace std;
int divizibil(int n,int c[1000]){
    int s=0;
    if(c[0]%5!=0){
        return 0;
    }
    for(int i=n-1;i>=0;i--){
        s=s+c[i];
    }
    if(s%3==0){
        return 1;
    }
    return 0;
}
int main()
{
    int n,c[1000]={};
    cin>>n;
    for(int i=n-1;i>=0;i--){
        cin>>c[i];
    }
    cout<<divizibil(n,c);
    return 0;
}
2.3 Edit, ia a V-a (2019)
i)int comun(int x,int y,int c[10]){
    while(x!=0){
        c[x%10]=1;
        x=x/10;
    }
    while(x!=0){
        if(c[x%10]==1){
            c[x%10]=2;
        }
        else{
            c[x%10]=0;
        }
        x=x/10;
    }
    for(int i=0;i<=9;i++){
        if(c[i]==2){
            c[i]=1;
        }
        else{
            c[i]=0;
        }
    }
}
ii) int construct(int c[10]){
    int z=0;
    for(int i=9;i>=0;i++){
        if(c[i]==1){
            z=z*10+i;
        }
    }
    return z;
}
